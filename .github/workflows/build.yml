name: Build

on:
  push:
    tags:
      - '*'

jobs:
  build-and-release:
#    strategy:
#      matrix:
#        arch: [ "386", "amd64", "arm64", "arm", "ppc64le", "s390x" ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.18

    - name: Build binary
      run: |
        GOARCH=386 GOOS=linux CGO_ENABLED=0 go build -ldflags "-s -w" -o notify-linux-386 main.go
        GOARCH=amd64 GOOS=linux CGO_ENABLED=0 go build -ldflags "-s -w" -o notify-linux-amd64 main.go
        GOARCH=arm64 GOOS=linux CGO_ENABLED=0 go build -ldflags "-s -w" -o notify-linux-arm64 main.go
        GOARCH=arm GOOS=linux CGO_ENABLED=0 go build -ldflags "-s -w" -o notify-linux-arm main.go
        GOARCH=ppc64le GOOS=linux CGO_ENABLED=0 go build -ldflags "-s -w" -o notify-linux-ppc64le main.go
        GOARCH=s390x GOOS=linux CGO_ENABLED=0 go build -ldflags "-s -w" -o notify-linux-s390x main.go
        sudo apt update
        sudo apt install -y tar
        tar notify-linux-386.tar.gz notify-linux-386
        tar notify-linux-amd64.tar.gz notify-linux-amd64
        tar notify-linux-arm64.tar.gz notify-linux-arm64
        tar notify-linux-arm.tar.gz notify-linux-arm
        tar notify-linux-ppc64le.tar.gz notify-linux-ppc64le
        tar notify-linux-s390x.tar.gz notify-linux-s390x
        ls -l notify-*
        ls -l *.zip

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_NAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Build docker image
      run: |
        ls -l notify-*
        version=`echo ${{ github.ref_name }} | sed -e "s/^v//"`
        docker buildx build --platform linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/s390x -t nmgsz/cloud-build-notify:${version} -t nmgsz/cloud-build-notify:latest . --push
        docker image ls

    - name: Auto Release
      uses: marvinpinto/action-automatic-releases@v1.2.1
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        title: "{{ github.ref_name }}"
        prerelease: false
        files: |
          *.tar.gz
    
